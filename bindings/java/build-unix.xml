<?xml version="1.0" encoding="windows-1252"?>
<project name="TSKTestTargets">
	<target name="test-precond" 
			description="Traverses the Images stored in the path represented by test-input variable, creates results files stored in the path represented by test-results, and compares them to the standards stored in the path represented by the test-standards variable, always run test-create-standards at least once before before running test."
			depends="compile-test, copyTSKLibs">
		<junit fork="on" haltonfailure="yes" dir=".">
			<sysproperty key="rslt" value="${test-results}"/>
			<sysproperty key="gold" value="${test-standards}"/>
			<sysproperty key="inpt" value="${test-input}"/>
			<classpath refid="libraries" />
			<formatter type="plain" usefile="false" />
			<test name="org.sleuthkit.datamodel.DataModelTestSuite" />
		</junit>
	</target>
	<target name="test-create-standards-precond"
			description="Traverses the Images stored in the path represented by test-input variable and creates then stores them to the path represented by the test-standards variable, run test-download-imgs at least once before this."
			depends="compile-test, copyTSKLibs">
		<java classname="org.sleuthkit.datamodel.DataModelTestSuite" classpathref="libraries"	fork="true" failonerror="true">
			<sysproperty key="gold" value="${test-standards}"/>
			<sysproperty key="inpt" value="${test-input}"/>
			<sysproperty key="types" value="${test-types}"/>
		</java>
	</target>


    <target name="testTSKLibs">
        <property environment="env"/>
        <available file="./jni/.libs/libtsk_jni.dylib" property="tsk_dylib.present"/>
        <available file="./jni/.libs/libtsk_jni.so" property="tsk_so.present"/>
		<available file="./jni/.libs/libtsk_jni.a" property="present"/>
		<fail unless="present" message="Run make install on The Sleuthkit."/>
    </target>

    <!-- OS X -->
    <target name="copyTskLibs_dylib" depends="testTSKLibs" if="tsk_dylib.present">
        <property environment="env"/>
        <copy file="./jni/.libs/libtsk_jni.dylib" tofile="./libtsk_jni.jnilib"/>
    </target>

    <!-- Non-OS X -->
    <target name="copyTskLibs_so" depends="testTSKLibs" if="tsk_so.present">
        <property environment="env"/>
        <copy file="./jni/.libs/libtsk_jni.so" tofile="./libtsk_jni.so"/>
    </target>

    <target name="copyTSKLibs" depends="copyTskLibs_so,copyTskLibs_dylib">
        <!-- depends targets take care of the actual copying since the file differs on OS X and Linux -->
        <!-- This assumes that TSK, libewf, and zlib have been installed on the system and those libraries will be with normal loading approaches -->
    </target>
</project>
